<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.6 on linux)" generated="20200301 14:41:32.856" rpa="false">
<suite id="s1" name="testPutAndGetTests" source="/virtual/maramgan/a1-repos/a1-02-27-2020-07-17-58/testPutAndGetTests.robot">
<test id="s1-t1" name="TestAddActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.010" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.010" endtime="20200301 14:41:33.010"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.010" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.010" endtime="20200301 14:41:33.010"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Swetha Maramganty</arg>
<arg>actorId=nm1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.011" level="INFO">${params} = {'name': 'Swetha Maramganty', 'actorId': 'nm1'}</msg>
<status status="PASS" starttime="20200301 14:41:33.010" endtime="20200301 14:41:33.011"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.011" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Swetha Maramganty", "actorId": "nm1"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.076" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.011" endtime="20200301 14:41:33.076"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.076" endtime="20200301 14:41:33.076"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.009" endtime="20200301 14:41:33.076" critical="yes"></status>
</test>
<test id="s1-t2" name="Test2AddActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.077" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.077" endtime="20200301 14:41:33.077"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.077" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.077" endtime="20200301 14:41:33.077"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Arnold Rosenbloom</arg>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.077" level="INFO">${params} = {'name': 'Arnold Rosenbloom', 'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200301 14:41:33.077" endtime="20200301 14:41:33.077"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.078" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Arnold Rosenbloom", "actorId": "nm2"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.092" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.078" endtime="20200301 14:41:33.092"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.093" endtime="20200301 14:41:33.093"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.076" endtime="20200301 14:41:33.093" critical="yes"></status>
</test>
<test id="s1-t3" name="TestAddKevinBacon200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.094" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.093" endtime="20200301 14:41:33.094"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.094" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.094" endtime="20200301 14:41:33.094"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Kevin Bacon</arg>
<arg>actorId=nm0000102</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.094" level="INFO">${params} = {'name': 'Kevin Bacon', 'actorId': 'nm0000102'}</msg>
<status status="PASS" starttime="20200301 14:41:33.094" endtime="20200301 14:41:33.094"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.095" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Kevin Bacon", "actorId": "nm0000102"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.109" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.094" endtime="20200301 14:41:33.109"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.109" endtime="20200301 14:41:33.110"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.093" endtime="20200301 14:41:33.110" critical="yes"></status>
</test>
<test id="s1-t4" name="Test3AddActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.110" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.110" endtime="20200301 14:41:33.111"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.111" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.111" endtime="20200301 14:41:33.111"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Ilir Dema</arg>
<arg>actorId=nm3</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.111" level="INFO">${params} = {'name': 'Ilir Dema', 'actorId': 'nm3'}</msg>
<status status="PASS" starttime="20200301 14:41:33.111" endtime="20200301 14:41:33.111"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.112" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Ilir Dema", "actorId": "nm3"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.125" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.112" endtime="20200301 14:41:33.125"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.126" endtime="20200301 14:41:33.126"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.110" endtime="20200301 14:41:33.126" critical="yes"></status>
</test>
<test id="s1-t5" name="TestAddActorKeepExistingNode400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.127" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.126" endtime="20200301 14:41:33.127"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.127" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.127" endtime="20200301 14:41:33.127"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Shabaz Badshah</arg>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.127" level="INFO">${params} = {'name': 'Shabaz Badshah', 'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200301 14:41:33.127" endtime="20200301 14:41:33.127"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.128" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Shabaz Badshah", "actorId": "nm2"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.134" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.127" endtime="20200301 14:41:33.134"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:41:33.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.134" endtime="20200301 14:41:33.134"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.126" endtime="20200301 14:41:33.134" critical="yes"></status>
</test>
<test id="s1-t6" name="TestAddActorBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.135" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.135" endtime="20200301 14:41:33.135"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.135" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.135" endtime="20200301 14:41:33.135"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Emma Stone</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.136" level="INFO">${params} = {'name': 'Emma Stone'}</msg>
<status status="PASS" starttime="20200301 14:41:33.135" endtime="20200301 14:41:33.136"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.136" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Emma Stone"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.138" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.136" endtime="20200301 14:41:33.138"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:41:33.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.138" endtime="20200301 14:41:33.138"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.134" endtime="20200301 14:41:33.138" critical="yes"></status>
</test>
<test id="s1-t7" name="TestAddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.139" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.139" endtime="20200301 14:41:33.139"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.139" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.139" endtime="20200301 14:41:33.139"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Up</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.140" level="INFO">${params} = {'name': 'Up', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200301 14:41:33.139" endtime="20200301 14:41:33.140"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.140" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Up", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.164" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.140" endtime="20200301 14:41:33.164"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.165" endtime="20200301 14:41:33.165"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.138" endtime="20200301 14:41:33.165" critical="yes"></status>
</test>
<test id="s1-t8" name="Test2AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.166" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.165" endtime="20200301 14:41:33.166"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.166" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.166" endtime="20200301 14:41:33.166"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Harry Potter</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.166" level="INFO">${params} = {'name': 'Harry Potter', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200301 14:41:33.166" endtime="20200301 14:41:33.166"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.167" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Harry Potter", "movieId": "tt2"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.179" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.166" endtime="20200301 14:41:33.179"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.179" endtime="20200301 14:41:33.179"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.165" endtime="20200301 14:41:33.179" critical="yes"></status>
</test>
<test id="s1-t9" name="Test3AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.180" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.180" endtime="20200301 14:41:33.181"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.181" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.181" endtime="20200301 14:41:33.181"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Patriots Day</arg>
<arg>movieId=mv001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.181" level="INFO">${params} = {'name': 'Patriots Day', 'movieId': 'mv001'}</msg>
<status status="PASS" starttime="20200301 14:41:33.181" endtime="20200301 14:41:33.181"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.182" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Patriots Day", "movieId": "mv001"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.194" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.181" endtime="20200301 14:41:33.194"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.194" endtime="20200301 14:41:33.194"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.180" endtime="20200301 14:41:33.195" critical="yes"></status>
</test>
<test id="s1-t10" name="Test4AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.195" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.195" endtime="20200301 14:41:33.195"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.196" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.195" endtime="20200301 14:41:33.196"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=LOTR</arg>
<arg>movieId=mv002</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.196" level="INFO">${params} = {'name': 'LOTR', 'movieId': 'mv002'}</msg>
<status status="PASS" starttime="20200301 14:41:33.196" endtime="20200301 14:41:33.196"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.196" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "LOTR", "movieId": "mv002"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.208" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.196" endtime="20200301 14:41:33.208"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.209" endtime="20200301 14:41:33.209"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.195" endtime="20200301 14:41:33.209" critical="yes"></status>
</test>
<test id="s1-t11" name="Test5AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.210" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.209" endtime="20200301 14:41:33.210"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.210" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.210" endtime="20200301 14:41:33.210"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=RV</arg>
<arg>movieId=mv003</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.210" level="INFO">${params} = {'name': 'RV', 'movieId': 'mv003'}</msg>
<status status="PASS" starttime="20200301 14:41:33.210" endtime="20200301 14:41:33.210"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.211" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "RV", "movieId": "mv003"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.223" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.210" endtime="20200301 14:41:33.223"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.223" endtime="20200301 14:41:33.224"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.209" endtime="20200301 14:41:33.224" critical="yes"></status>
</test>
<test id="s1-t12" name="TestAddMovieKeepExistingNode400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.224" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.224" endtime="20200301 14:41:33.225"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.225" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.225" endtime="20200301 14:41:33.225"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Cinderalla</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.225" level="INFO">${params} = {'name': 'Cinderalla', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200301 14:41:33.225" endtime="20200301 14:41:33.225"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.226" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Cinderalla", "movieId": "tt2"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.230" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.225" endtime="20200301 14:41:33.230"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:41:33.230" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.230" endtime="20200301 14:41:33.230"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.224" endtime="20200301 14:41:33.230" critical="yes"></status>
</test>
<test id="s1-t13" name="TestAddMovieBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.231" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.231" endtime="20200301 14:41:33.231"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.231" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.231" endtime="20200301 14:41:33.231"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Graduation</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.231" level="INFO">${params} = {'name': 'Graduation'}</msg>
<status status="PASS" starttime="20200301 14:41:33.231" endtime="20200301 14:41:33.231"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.232" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Graduation"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.233" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.232" endtime="20200301 14:41:33.233"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:41:33.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.234" endtime="20200301 14:41:33.234"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.230" endtime="20200301 14:41:33.234" critical="yes"></status>
</test>
<test id="s1-t14" name="TestAddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.235" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.235" endtime="20200301 14:41:33.235"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.235" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.235" endtime="20200301 14:41:33.235"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.236" level="INFO">${params} = {'actorId': 'nm1', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200301 14:41:33.235" endtime="20200301 14:41:33.236"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.236" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm1", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.291" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.236" endtime="20200301 14:41:33.291"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.291" endtime="20200301 14:41:33.291"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.234" endtime="20200301 14:41:33.291" critical="yes"></status>
</test>
<test id="s1-t15" name="Test2AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.292" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.292" endtime="20200301 14:41:33.292"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.292" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.292" endtime="20200301 14:41:33.292"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
<arg>movieId=mv002</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.293" level="INFO">${params} = {'actorId': 'nm1', 'movieId': 'mv002'}</msg>
<status status="PASS" starttime="20200301 14:41:33.293" endtime="20200301 14:41:33.293"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.293" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm1", "movieId": "mv002"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.319" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.293" endtime="20200301 14:41:33.319"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.319" endtime="20200301 14:41:33.319"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.292" endtime="20200301 14:41:33.319" critical="yes"></status>
</test>
<test id="s1-t16" name="Test3AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.320" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.320" endtime="20200301 14:41:33.320"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.320" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.320" endtime="20200301 14:41:33.321"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm3</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.321" level="INFO">${params} = {'actorId': 'nm3', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200301 14:41:33.321" endtime="20200301 14:41:33.321"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.321" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm3", "movieId": "tt2"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.346" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.321" endtime="20200301 14:41:33.346"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.346" endtime="20200301 14:41:33.346"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.319" endtime="20200301 14:41:33.347" critical="yes"></status>
</test>
<test id="s1-t17" name="Test4AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.347" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.347" endtime="20200301 14:41:33.347"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.348" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.347" endtime="20200301 14:41:33.348"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm3</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.348" level="INFO">${params} = {'actorId': 'nm3', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200301 14:41:33.348" endtime="20200301 14:41:33.348"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.348" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm3", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.367" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.348" endtime="20200301 14:41:33.367"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.368" endtime="20200301 14:41:33.368"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.347" endtime="20200301 14:41:33.368" critical="yes"></status>
</test>
<test id="s1-t18" name="Test5AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.368" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.368" endtime="20200301 14:41:33.369"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.369" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.369" endtime="20200301 14:41:33.369"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.369" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv001'}</msg>
<status status="PASS" starttime="20200301 14:41:33.369" endtime="20200301 14:41:33.369"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.370" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "mv001"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.397" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.369" endtime="20200301 14:41:33.397"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.398" endtime="20200301 14:41:33.398"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.368" endtime="20200301 14:41:33.398" critical="yes"></status>
</test>
<test id="s1-t19" name="Test6AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.399" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.398" endtime="20200301 14:41:33.399"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.399" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.399" endtime="20200301 14:41:33.399"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv002</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.399" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv002'}</msg>
<status status="PASS" starttime="20200301 14:41:33.399" endtime="20200301 14:41:33.399"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.400" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "mv002"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.416" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.399" endtime="20200301 14:41:33.416"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.416" endtime="20200301 14:41:33.417"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.398" endtime="20200301 14:41:33.417" critical="yes"></status>
</test>
<test id="s1-t20" name="Test7AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.417" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.417" endtime="20200301 14:41:33.418"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.418" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.418" endtime="20200301 14:41:33.418"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv003</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.418" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv003'}</msg>
<status status="PASS" starttime="20200301 14:41:33.418" endtime="20200301 14:41:33.418"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.419" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "mv003"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.438" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.418" endtime="20200301 14:41:33.438"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.439" endtime="20200301 14:41:33.439"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.417" endtime="20200301 14:41:33.439" critical="yes"></status>
</test>
<test id="s1-t21" name="TestAddRelationBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.440" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.440" endtime="20200301 14:41:33.440"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.440" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.440" endtime="20200301 14:41:33.440"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=nm0000102</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.440" level="INFO">${params} = {'actor': 'nm0000102'}</msg>
<status status="PASS" starttime="20200301 14:41:33.440" endtime="20200301 14:41:33.441"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.441" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actor": "nm0000102"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.443" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.441" endtime="20200301 14:41:33.443"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:41:33.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.443" endtime="20200301 14:41:33.443"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.439" endtime="20200301 14:41:33.443" critical="yes"></status>
</test>
<test id="s1-t22" name="TestAddRelationMovieNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.444" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.444" endtime="20200301 14:41:33.444"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.444" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.444" endtime="20200301 14:41:33.444"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.445" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:41:33.444" endtime="20200301 14:41:33.445"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.445" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "notexist"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.473" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.445" endtime="20200301 14:41:33.473"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 14:41:33.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.474" endtime="20200301 14:41:33.474"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.443" endtime="20200301 14:41:33.474" critical="yes"></status>
</test>
<test id="s1-t23" name="TestAddRelationActorNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.475" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.475" endtime="20200301 14:41:33.475"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.475" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.475" endtime="20200301 14:41:33.475"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.476" level="INFO">${params} = {'actorId': 'notexist', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200301 14:41:33.475" endtime="20200301 14:41:33.476"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.476" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "notexist", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.483" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.476" endtime="20200301 14:41:33.483"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 14:41:33.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.483" endtime="20200301 14:41:33.483"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.474" endtime="20200301 14:41:33.483" critical="yes"></status>
</test>
<test id="s1-t24" name="TestAddRelationBothNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.484" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.484" endtime="20200301 14:41:33.484"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.484" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.484" endtime="20200301 14:41:33.484"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.485" level="INFO">${params} = {'actorId': 'notexist', 'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:41:33.485" endtime="20200301 14:41:33.485"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.485" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "notexist", "movieId": "notexist"} 
json=None</msg>
<msg timestamp="20200301 14:41:33.490" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.485" endtime="20200301 14:41:33.490"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 14:41:33.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.490" endtime="20200301 14:41:33.491"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.484" endtime="20200301 14:41:33.491" critical="yes"></status>
</test>
<test id="s1-t25" name="TestGetActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.491" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.491" endtime="20200301 14:41:33.492"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200301 14:41:33.492" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.492" endtime="20200301 14:41:33.492"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.492" level="INFO">${params} = {'actorId': 'nm1'}</msg>
<status status="PASS" starttime="20200301 14:41:33.492" endtime="20200301 14:41:33.492"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>headers=${header}</arg>
<arg>json=${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.493" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm1'}</msg>
<msg timestamp="20200301 14:41:33.501" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.492" endtime="20200301 14:41:33.501"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.502" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.501" endtime="20200301 14:41:33.502"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.491" endtime="20200301 14:41:33.502" critical="yes"></status>
</test>
<test id="s1-t26" name="TestGetActorExistsButNoMovies200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.502" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.502" endtime="20200301 14:41:33.502"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200301 14:41:33.503" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.503" endtime="20200301 14:41:33.503"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.503" level="INFO">${params} = {'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200301 14:41:33.503" endtime="20200301 14:41:33.503"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>headers=${header}</arg>
<arg>json=${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.503" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2'}</msg>
<msg timestamp="20200301 14:41:33.513" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.503" endtime="20200301 14:41:33.513"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.513" endtime="20200301 14:41:33.514"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.502" endtime="20200301 14:41:33.514" critical="yes"></status>
</test>
<test id="s1-t27" name="TestGetActorBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.514" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.514" endtime="20200301 14:41:33.515"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.515" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.515" endtime="20200301 14:41:33.515"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>act=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.515" level="INFO">${params} = {'act': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:41:33.515" endtime="20200301 14:41:33.515"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.516" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'act': 'notexist'}</msg>
<msg timestamp="20200301 14:41:33.517" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.515" endtime="20200301 14:41:33.517"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:41:33.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.517" endtime="20200301 14:41:33.518"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.514" endtime="20200301 14:41:33.518" critical="yes"></status>
</test>
<test id="s1-t28" name="TestGetActorNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.518" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.518" endtime="20200301 14:41:33.519"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.519" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.519" endtime="20200301 14:41:33.519"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.519" level="INFO">${params} = {'actorId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:41:33.519" endtime="20200301 14:41:33.519"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.520" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist'}</msg>
<msg timestamp="20200301 14:41:33.527" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.519" endtime="20200301 14:41:33.527"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 14:41:33.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.527" endtime="20200301 14:41:33.527"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.518" endtime="20200301 14:41:33.527" critical="yes"></status>
</test>
<test id="s1-t29" name="TestGetMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.528" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.528" endtime="20200301 14:41:33.528"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.529" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.528" endtime="20200301 14:41:33.529"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.529" level="INFO">${params} = {'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200301 14:41:33.529" endtime="20200301 14:41:33.529"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getMovie</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.529" level="INFO">GET Request using : uri=/api/v1/getMovie, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'movieId': 'tt1'}</msg>
<msg timestamp="20200301 14:41:33.544" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.529" endtime="20200301 14:41:33.544"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.544" endtime="20200301 14:41:33.544"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.528" endtime="20200301 14:41:33.544" critical="yes"></status>
</test>
<test id="s1-t30" name="TestGetMovieNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.545" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.545" endtime="20200301 14:41:33.545"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.545" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.545" endtime="20200301 14:41:33.545"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.546" level="INFO">${params} = {'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:41:33.545" endtime="20200301 14:41:33.546"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getMovie</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.546" level="INFO">GET Request using : uri=/api/v1/getMovie, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'movieId': 'notexist'}</msg>
<msg timestamp="20200301 14:41:33.553" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.546" endtime="20200301 14:41:33.553"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 14:41:33.553" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.553" endtime="20200301 14:41:33.553"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.544" endtime="20200301 14:41:33.553" critical="yes"></status>
</test>
<test id="s1-t31" name="TestGetMovieBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.554" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.554" endtime="20200301 14:41:33.554"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.554" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.554" endtime="20200301 14:41:33.554"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>movie=742053</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.555" level="INFO">${params} = {'movie': '742053'}</msg>
<status status="PASS" starttime="20200301 14:41:33.555" endtime="20200301 14:41:33.555"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getMovie</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.555" level="INFO">GET Request using : uri=/api/v1/getMovie, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'movie': '742053'}</msg>
<msg timestamp="20200301 14:41:33.557" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.555" endtime="20200301 14:41:33.557"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:41:33.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.557" endtime="20200301 14:41:33.558"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.553" endtime="20200301 14:41:33.558" critical="yes"></status>
</test>
<test id="s1-t32" name="TestGetRelationship200True">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.558" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.558" endtime="20200301 14:41:33.559"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.559" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.559" endtime="20200301 14:41:33.559"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.559" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv001'}</msg>
<status status="PASS" starttime="20200301 14:41:33.559" endtime="20200301 14:41:33.559"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.560" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm0000102', 'movieId': 'mv001'}</msg>
<msg timestamp="20200301 14:41:33.574" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.559" endtime="20200301 14:41:33.574"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.574" endtime="20200301 14:41:33.575"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>nm0000102</arg>
</arguments>
<status status="PASS" starttime="20200301 14:41:33.575" endtime="20200301 14:41:33.575"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>mv001</arg>
</arguments>
<status status="PASS" starttime="20200301 14:41:33.575" endtime="20200301 14:41:33.575"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>${true}</arg>
</arguments>
<status status="PASS" starttime="20200301 14:41:33.576" endtime="20200301 14:41:33.576"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.558" endtime="20200301 14:41:33.576" critical="yes"></status>
</test>
<test id="s1-t33" name="TestGetRelationshipIncompleteBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.576" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.576" endtime="20200301 14:41:33.577"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.577" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.577" endtime="20200301 14:41:33.577"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=9999</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.577" level="INFO">${params} = {'actor': '9999'}</msg>
<status status="PASS" starttime="20200301 14:41:33.577" endtime="20200301 14:41:33.577"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.577" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actor': '9999'}</msg>
<msg timestamp="20200301 14:41:33.579" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.577" endtime="20200301 14:41:33.579"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:41:33.580" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.579" endtime="20200301 14:41:33.580"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.576" endtime="20200301 14:41:33.580" critical="yes"></status>
</test>
<test id="s1-t34" name="TestGetRelationshipBothNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.580" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.580" endtime="20200301 14:41:33.580"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.581" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.581" endtime="20200301 14:41:33.581"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.581" level="INFO">${params} = {'actorId': 'notexist', 'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:41:33.581" endtime="20200301 14:41:33.581"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.581" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist', 'movieId': 'notexist'}</msg>
<msg timestamp="20200301 14:41:33.587" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.581" endtime="20200301 14:41:33.587"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 14:41:33.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.587" endtime="20200301 14:41:33.588"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.580" endtime="20200301 14:41:33.588" critical="yes"></status>
</test>
<test id="s1-t35" name="TestGetRelationshipNoRel200False">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.588" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.588" endtime="20200301 14:41:33.588"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.589" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.589" endtime="20200301 14:41:33.589"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.589" level="INFO">${params} = {'actorId': 'nm2', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200301 14:41:33.589" endtime="20200301 14:41:33.589"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.589" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2', 'movieId': 'tt2'}</msg>
<msg timestamp="20200301 14:41:33.598" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.589" endtime="20200301 14:41:33.598"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.598" endtime="20200301 14:41:33.599"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>nm2</arg>
</arguments>
<status status="PASS" starttime="20200301 14:41:33.599" endtime="20200301 14:41:33.599"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>tt2</arg>
</arguments>
<status status="PASS" starttime="20200301 14:41:33.599" endtime="20200301 14:41:33.599"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>${false}</arg>
</arguments>
<status status="PASS" starttime="20200301 14:41:33.599" endtime="20200301 14:41:33.600"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.588" endtime="20200301 14:41:33.600" critical="yes"></status>
</test>
<test id="s1-t36" name="TestGetBaconNumber200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.600" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.600" endtime="20200301 14:41:33.601"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.601" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.601" endtime="20200301 14:41:33.601"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.601" level="INFO">${params} = {'actorId': 'nm1'}</msg>
<status status="PASS" starttime="20200301 14:41:33.601" endtime="20200301 14:41:33.601"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.601" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm1'}</msg>
<msg timestamp="20200301 14:41:33.614" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.601" endtime="20200301 14:41:33.614"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.614" endtime="20200301 14:41:33.615"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200301 14:41:33.615" endtime="20200301 14:41:33.615"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.600" endtime="20200301 14:41:33.615" critical="yes"></status>
</test>
<test id="s1-t37" name="Test2GetBaconNumberKevinBacon200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.616" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.615" endtime="20200301 14:41:33.616"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.616" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.616" endtime="20200301 14:41:33.616"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.616" level="INFO">${params} = {'actorId': 'nm0000102'}</msg>
<status status="PASS" starttime="20200301 14:41:33.616" endtime="20200301 14:41:33.616"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.617" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm0000102'}</msg>
<msg timestamp="20200301 14:41:33.618" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.616" endtime="20200301 14:41:33.618"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.618" endtime="20200301 14:41:33.619"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20200301 14:41:33.619" endtime="20200301 14:41:33.619"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.615" endtime="20200301 14:41:33.619" critical="yes"></status>
</test>
<test id="s1-t38" name="TestGetBaconNumberBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.620" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.620" endtime="20200301 14:41:33.620"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.620" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.620" endtime="20200301 14:41:33.620"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=1001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.621" level="INFO">${params} = {'actor': '1001'}</msg>
<status status="PASS" starttime="20200301 14:41:33.620" endtime="20200301 14:41:33.621"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.621" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actor': '1001'}</msg>
<msg timestamp="20200301 14:41:33.626" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.621" endtime="20200301 14:41:33.626"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:41:33.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.627" endtime="20200301 14:41:33.627"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.619" endtime="20200301 14:41:33.627" critical="yes"></status>
</test>
<test id="s1-t39" name="TestGetBaconNumberIdNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.628" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.627" endtime="20200301 14:41:33.628"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.628" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.628" endtime="20200301 14:41:33.628"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.628" level="INFO">${params} = {'actorId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:41:33.628" endtime="20200301 14:41:33.628"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.629" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist'}</msg>
<msg timestamp="20200301 14:41:33.650" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.628" endtime="20200301 14:41:33.650"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:41:33.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200301 14:41:33.651" level="FAIL">404 != 400</msg>
<status status="FAIL" starttime="20200301 14:41:33.650" endtime="20200301 14:41:33.651"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:41:33.627" endtime="20200301 14:41:33.651" critical="yes">404 != 400</status>
</test>
<test id="s1-t40" name="TestGetBaconNumberPathNoExist200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.652" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.652" endtime="20200301 14:41:33.652"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.652" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.652" endtime="20200301 14:41:33.652"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.652" level="INFO">${params} = {'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200301 14:41:33.652" endtime="20200301 14:41:33.652"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.653" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2'}</msg>
<msg timestamp="20200301 14:41:33.659" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.652" endtime="20200301 14:41:33.659"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200301 14:41:33.660" level="FAIL">404 != 200</msg>
<status status="FAIL" starttime="20200301 14:41:33.660" endtime="20200301 14:41:33.660"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:41:33.651" endtime="20200301 14:41:33.660" critical="yes">404 != 200</status>
</test>
<test id="s1-t41" name="TestBaconPath200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.661" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.661" endtime="20200301 14:41:33.661"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.661" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.661" endtime="20200301 14:41:33.661"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm3</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.661" level="INFO">${params} = {'actorId': 'nm3'}</msg>
<status status="PASS" starttime="20200301 14:41:33.661" endtime="20200301 14:41:33.662"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.662" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm3'}</msg>
<msg timestamp="20200301 14:41:33.694" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.662" endtime="20200301 14:41:33.694"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.694" endtime="20200301 14:41:33.695"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20200301 14:41:33.695" level="FAIL">Resolving variable '${resp.json()}' failed: JSONDecodeError: Expecting ',' delimiter or '}': line 1 column 21 (char 20)</msg>
<status status="FAIL" starttime="20200301 14:41:33.695" endtime="20200301 14:41:33.695"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:41:33.660" endtime="20200301 14:41:33.695" critical="yes">Resolving variable '${resp.json()}' failed: JSONDecodeError: Expecting ',' delimiter or '}': line 1 column 21 (char 20)</status>
</test>
<test id="s1-t42" name="TestBaconPathBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.696" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.696" endtime="20200301 14:41:33.696"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.696" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.696" endtime="20200301 14:41:33.696"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=3333</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.697" level="INFO">${params} = {'actor': '3333'}</msg>
<status status="PASS" starttime="20200301 14:41:33.696" endtime="20200301 14:41:33.697"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.697" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actor': '3333'}</msg>
<msg timestamp="20200301 14:41:33.699" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.697" endtime="20200301 14:41:33.699"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:41:33.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.699" endtime="20200301 14:41:33.699"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 14:41:33.695" endtime="20200301 14:41:33.699" critical="yes"></status>
</test>
<test id="s1-t43" name="TestBaconPathIdNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.700" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.700" endtime="20200301 14:41:33.700"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.700" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.700" endtime="20200301 14:41:33.700"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.701" level="INFO">${params} = {'actorId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 14:41:33.700" endtime="20200301 14:41:33.701"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.701" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist'}</msg>
<msg timestamp="20200301 14:41:33.706" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.701" endtime="20200301 14:41:33.706"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 14:41:33.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200301 14:41:33.706" level="FAIL">404 != 400</msg>
<status status="FAIL" starttime="20200301 14:41:33.706" endtime="20200301 14:41:33.706"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:41:33.699" endtime="20200301 14:41:33.707" critical="yes">404 != 400</status>
</test>
<test id="s1-t44" name="TestBaconPathPathNoExist200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 14:41:33.707" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 14:41:33.707" endtime="20200301 14:41:33.707"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 14:41:33.708" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 14:41:33.707" endtime="20200301 14:41:33.708"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 14:41:33.708" level="INFO">${params} = {'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200301 14:41:33.708" endtime="20200301 14:41:33.708"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 14:41:33.708" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2'}</msg>
<msg timestamp="20200301 14:41:33.713" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 14:41:33.708" endtime="20200301 14:41:33.713"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 14:41:33.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20200301 14:41:33.714" level="FAIL">404 != 200</msg>
<status status="FAIL" starttime="20200301 14:41:33.713" endtime="20200301 14:41:33.714"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 14:41:33.707" endtime="20200301 14:41:33.714" critical="yes">404 != 200</status>
</test>
<status status="FAIL" starttime="20200301 14:41:32.856" endtime="20200301 14:41:33.715"></status>
</suite>
<statistics>
<total>
<stat pass="39" fail="5">Critical Tests</stat>
<stat pass="39" fail="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="39" fail="5" id="s1" name="testPutAndGetTests">testPutAndGetTests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
